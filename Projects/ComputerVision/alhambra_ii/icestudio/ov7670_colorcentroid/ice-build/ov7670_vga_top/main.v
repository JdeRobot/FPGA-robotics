// Code generated by Icestudio 0.7.1w202108280708

`default_nettype none

//---- Top entity
module main (
 input v656efd,
 input v0a90cf,
 input v18f26f,
 input vff1459,
 input v53b257,
 input v198630,
 input v875f83,
 input vd828fd,
 input vb17786,
 input v793d69,
 input vf9de2b,
 output [5:0] v096ab9,
 output v5a25e4,
 output vcd2b88,
 output vff5579,
 output vf70424,
 output v938565,
 output vc704f5,
 output va4cfbb,
 output va81341,
 output v3a4a1f,
 output v44ff43,
 output vfcb9c1,
 output v9246f1,
 output va5c337
);
 wire w0;
 wire w1;
 wire w2;
 wire [0:12] w3;
 wire [0:11] w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire [0:5] w18;
 wire [0:7] w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire [0:3] w25;
 wire [0:3] w26;
 wire [0:3] w27;
 wire w28;
 wire w29;
 wire w30;
 wire w31;
 wire w32;
 wire w33;
 wire w34;
 wire w35;
 wire w36;
 wire w37;
 wire [0:11] w38;
 wire [0:12] w39;
 wire w40;
 wire w41;
 wire [0:11] w42;
 wire [0:12] w43;
 wire w44;
 wire [0:12] w45;
 wire [0:11] w46;
 wire w47;
 wire w48;
 wire w49;
 wire w50;
 wire w51;
 wire w52;
 wire w53;
 wire [0:2] w54;
 wire [0:7] w55;
 assign w5 = v656efd;
 assign vff5579 = w6;
 assign v5a25e4 = w7;
 assign va4cfbb = w8;
 assign va81341 = w9;
 assign v44ff43 = w10;
 assign vfcb9c1 = w11;
 assign w12 = v0a90cf;
 assign vcd2b88 = w13;
 assign v938565 = w14;
 assign vc704f5 = w15;
 assign v3a4a1f = w16;
 assign w17 = v18f26f;
 assign v096ab9 = w18;
 assign w20 = vb17786;
 assign w21 = v875f83;
 assign w22 = vf9de2b;
 assign w23 = v18f26f;
 assign va5c337 = w28;
 assign v9246f1 = w29;
 assign vf70424 = w30;
 assign w33 = vff1459;
 assign w34 = v53b257;
 assign w35 = vd828fd;
 assign w36 = v793d69;
 assign w41 = v18f26f;
 assign w47 = vf9de2b;
 assign w48 = vd828fd;
 assign w49 = v875f83;
 assign w50 = v198630;
 assign w1 = w0;
 assign w23 = w17;
 assign w24 = w0;
 assign w24 = w1;
 assign w37 = w0;
 assign w37 = w1;
 assign w37 = w24;
 assign w40 = w0;
 assign w40 = w1;
 assign w40 = w24;
 assign w40 = w37;
 assign w41 = w17;
 assign w41 = w23;
 assign w47 = w22;
 assign w48 = w35;
 assign w49 = w21;
 assign w52 = w51;
 vb950e8 vf5324c (
  .v499c2a(w1),
  .v1d0cfa(w2),
  .v7b215d(w3),
  .v55be3f(w4),
  .v53aa18(w42),
  .vece592(w43)
 );
 vb0f50e v9d6c24 (
  .v502ac2(w0),
  .v4ed35a(w2),
  .v08337c(w3),
  .vf4e7d4(w4),
  .vde95c3(w12),
  .vce1a13(w13),
  .v2de6ff(w14),
  .vcf5c71(w15),
  .v12de31(w16),
  .vefc03a(w17),
  .ve4f815(w18),
  .vea74f7(w19),
  .v342f42(w31),
  .vea7dae(w32),
  .v09dbd4(w33),
  .vb30c03(w34),
  .vdd2c1a(w51)
 );
 v73da77 va05532 (
  .v73ce71(w0),
  .v262286(w5)
 );
 v78c6f8 v701ea9 (
  .v52bdc9(w6),
  .v6945ea(w7),
  .v15e3ad(w25)
 );
 v78c6f8 v8fbe82 (
  .v6945ea(w8),
  .v52bdc9(w9),
  .v15e3ad(w26)
 );
 v78c6f8 v52ded8 (
  .v6945ea(w10),
  .v52bdc9(w11),
  .v15e3ad(w27)
 );
 v1bed30 v5f9eb7 (
  .v040cfe(w19),
  .v217058(w20),
  .v1135a2(w21),
  .v306f98(w22),
  .v2e06dc(w35),
  .vdaab10(w36),
  .v6ce758(w47),
  .v67127b(w48),
  .vd517c0(w49)
 );
 vf65fac ve64290 (
  .v8d925d(w23),
  .v025353(w24),
  .v56f3c4(w25),
  .v6f66ae(w26),
  .vefb3e5(w27),
  .v4006d4(w28),
  .v06036e(w29),
  .ve81328(w38),
  .v27821c(w39),
  .v675058(w52),
  .v220422(w53),
  .vf5a7d7(w54),
  .ve3f8d2(w55)
 );
 vd7e6ff ve07eb2 (
  .v341fc3(w30),
  .v248807(w31),
  .vba979e(w32)
 );
 vb950e8 v79777f (
  .v499c2a(w37),
  .v53aa18(w38),
  .vece592(w39),
  .v1d0cfa(w44),
  .v7b215d(w45),
  .v55be3f(w46)
 );
 v728cc4 vc7cd83 (
  .vd8b32e(w40),
  .vd6d39e(w41),
  .v693ffc(w42),
  .v0d6545(w43),
  .vfb9b9d(w44),
  .v201920(w45),
  .v8cca3e(w46),
  .v34bbf1(w50),
  .v83044f(w54),
  .ve0b809(w55)
 );
 vc83dcd vcc9a54 (
  .v608bd9(w51)
 );
 vc4dd08 v6a5548 (
  .v608bd9(w53)
 );
endmodule

/*-------------------------------------------------*/
/*-- ov7670_rgb_yuv  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Configures ov7670 in either RGB444 or YUV and shows it
/*-------------------------------------------------*/
//---- Top entity
module vb950e8 (
 input v499c2a,
 input v1d0cfa,
 input [12:0] v7b215d,
 input [11:0] v55be3f,
 input [12:0] vece592,
 output [11:0] v53aa18
);
 wire w0;
 wire w1;
 wire [0:12] w2;
 wire [0:11] w3;
 wire [0:12] w4;
 wire [0:11] w5;
 assign w0 = v499c2a;
 assign w1 = v1d0cfa;
 assign w2 = v7b215d;
 assign w3 = v55be3f;
 assign w4 = vece592;
 assign v53aa18 = w5;
 vb950e8_v401844 v401844 (
  .clk(w0),
  .wea(w1),
  .addra(w2),
  .dina(w3),
  .addrb(w4),
  .doutb(w5)
 );
endmodule

/*-------------------------------------------------*/
/*-- framebuf_80x60_12b  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- memory for 80x60 image, double port, one for writting and the other for reading. 12-bit word length
/*-------------------------------------------------*/

module vb950e8_v401844 (
 input clk,
 input wea,
 input [12:0] addra,
 input [11:0] dina,
 input [12:0] addrb,
 output [11:0] doutb
);
   parameter c_img_cols = 80; // # cols
   parameter c_img_rows = 60; // # rows
   parameter c_img_pxls = c_img_cols * c_img_rows; //4800=80x60
   parameter c_nb_img_pxls =  13;  //80*60=4800 -> 2^13
   parameter c_nb_buf = 12; //4 bits for each color
   
   reg doutb;
   reg  [c_nb_buf-1:0] ram[c_img_pxls-1:0];
 
   always @ (posedge clk)
   begin
     if (wea)
       ram[addra] <= dina;
       doutb <= ram[addrb];
   end
endmodule
//---- Top entity
module vb0f50e (
 input vefc03a,
 input v502ac2,
 input vea0d18,
 input vde95c3,
 input v09dbd4,
 input vb30c03,
 input [7:0] vea74f7,
 input vdd2c1a,
 output [5:0] ve4f815,
 output vce1a13,
 output v2de6ff,
 output v342f42,
 output vea7dae,
 output vcf5c71,
 output v12de31,
 output v87ce88,
 output [12:0] v08337c,
 output [11:0] vf4e7d4,
 output v4ed35a
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire [0:7] w7;
 wire [0:5] w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire [0:12] w16;
 wire [0:11] w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 assign w0 = vefc03a;
 assign w1 = vefc03a;
 assign w2 = v502ac2;
 assign w3 = v502ac2;
 assign w4 = vde95c3;
 assign w5 = v09dbd4;
 assign w6 = vb30c03;
 assign w7 = vea74f7;
 assign ve4f815 = w8;
 assign vce1a13 = w9;
 assign v2de6ff = w10;
 assign vea7dae = w11;
 assign v342f42 = w12;
 assign v12de31 = w13;
 assign vcf5c71 = w14;
 assign v87ce88 = w15;
 assign v08337c = w16;
 assign vf4e7d4 = w17;
 assign v4ed35a = w18;
 assign w19 = vdd2c1a;
 assign w20 = vdd2c1a;
 assign w21 = vea0d18;
 assign w1 = w0;
 assign w3 = w2;
 assign w20 = w19;
 v9d9474 vce20e9 (
  .vd10bac(w1),
  .v3faf09(w3),
  .v8d9eb3(w4),
  .v18268a(w5),
  .v072d3f(w6),
  .v1563c0(w7),
  .v6427a9(w16),
  .vc1f5b2(w17),
  .v923bc7(w18),
  .v18a31e(w19)
 );
 v3d210b vde3cfc (
  .v12f7ed(w0),
  .v6f7526(w2),
  .v029b2d(w8),
  .ve4a930(w9),
  .vd17b4b(w10),
  .v1997c6(w11),
  .v6e82fd(w12),
  .v8d7210(w13),
  .v5887ce(w14),
  .v8aa3fe(w15),
  .vac4735(w20),
  .v0ca2e6(w21)
 );
endmodule

/*-------------------------------------------------*/
/*-- ov7670_interface  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- ov7670 camera interface. Configures camera and captures pixels
/*-------------------------------------------------*/
//---- Top entity
module v9d9474 (
 input vd10bac,
 input v3faf09,
 input v8d9eb3,
 input v18268a,
 input v072d3f,
 input [7:0] v1563c0,
 input v18a31e,
 output [12:0] v6427a9,
 output [11:0] vc1f5b2,
 output v923bc7
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire [0:7] w4;
 wire [0:12] w5;
 wire [0:11] w6;
 wire w7;
 wire w8;
 wire w9;
 assign w0 = vd10bac;
 assign w1 = v8d9eb3;
 assign w2 = v18268a;
 assign w3 = v072d3f;
 assign w4 = v1563c0;
 assign v6427a9 = w5;
 assign vc1f5b2 = w6;
 assign v923bc7 = w7;
 assign w8 = v18a31e;
 assign w9 = v3faf09;
 v9d9474_v556213 v556213 (
  .rst(w0),
  .ov7670_pclk(w1),
  .ov7670_vsync(w2),
  .ov7670_href(w3),
  .ov7670_d(w4),
  .capture_addr(w5),
  .capture_data(w6),
  .capture_we(w7),
  .rgbmode(w8),
  .clk50mhz(w9)
 );
endmodule

/*-------------------------------------------------*/
/*-- ov7670_capture  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Capture for the ov7670 camera
/*-------------------------------------------------*/

module v9d9474_v556213 (
 input rst,
 input clk50mhz,
 input ov7670_pclk,
 input ov7670_vsync,
 input ov7670_href,
 input [7:0] ov7670_d,
 input rgbmode,
 output [12:0] capture_addr,
 output [11:0] capture_data,
 output capture_we
);
 // @include ov7670_capture.v
 
 wire    swap_r_b;
 assign  swap_r_b = 1'b1;
 
   ov7670_capture lnk2vrlg 
   (
      .rst          (rst),
      .clk          (clk50mhz),
      .pclk         (ov7670_pclk),
      .vsync        (ov7670_vsync),
      .href         (ov7670_href),
      .rgbmode      (rgbmode),
      .swap_r_b     (swap_r_b),
      .data         (ov7670_d),
      .addr         (capture_addr),
      .dout         (capture_data),
      .we           (capture_we)
   );
   
endmodule
//---- Top entity
module v3d210b (
 input v12f7ed,
 input v6f7526,
 input vac4735,
 input v0ca2e6,
 output [5:0] v029b2d,
 output ve4a930,
 output vd17b4b,
 output v6e82fd,
 output v1997c6,
 output v5887ce,
 output v8d7210,
 output v8aa3fe
);
 wire w0;
 wire w1;
 wire [0:5] w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 assign w0 = v12f7ed;
 assign v029b2d = w2;
 assign v6e82fd = w3;
 assign v1997c6 = w4;
 assign v5887ce = w5;
 assign v8aa3fe = w6;
 assign vd17b4b = w7;
 assign ve4a930 = w8;
 assign v8d7210 = w9;
 assign w10 = vac4735;
 assign w11 = v0ca2e6;
 assign w12 = v6f7526;
 vc4dd08 ve02061 (
  .v608bd9(w1)
 );
 v3d210b_v7c12e2 v7c12e2 (
  .rst(w0),
  .resend(w1),
  .cnt_reg_test(w2),
  .sdat_on(w3),
  .sdat_out(w4),
  .ov7670_rst_n(w5),
  .ov7670_pwdn(w6),
  .ov7670_sioc(w7),
  .ov7670_cfgdone(w8),
  .ov7670_xclk(w9),
  .rgbmode(w10),
  .testmode(w11),
  .clk50mhz(w12)
 );
endmodule

/*-------------------------------------------------*/
/*-- ov7670_ctrl  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- configures ov7670 camera
/*-------------------------------------------------*/

module v3d210b_v7c12e2 (
 input rst,
 input clk50mhz,
 input resend,
 input rgbmode,
 input testmode,
 output [5:0] cnt_reg_test,
 output ov7670_cfgdone,
 output ov7670_sioc,
 output sdat_on,
 output sdat_out,
 output ov7670_rst_n,
 output ov7670_xclk,
 output ov7670_pwdn
);
   // @include ov7670_top_ctrl.v
   // @include ov7670_ctrl_reg.v
   // @include sccb_master.v
   
   ov7670_top_ctrl lnk2vrlg 
   (
      .rst          (rst),
      .clk          (clk50mhz),
      .resend       (resend),
      .rgbmode      (rgbmode),
      .testmode     (testmode),     
      .cnt_reg_test (cnt_reg_test[5:0]),
      .done         (ov7670_cfgdone),
      .sclk         (ov7670_sioc),
      .sdat_on      (sdat_on),
      .sdat_out     (sdat_out),
      .ov7670_rst_n (ov7670_rst_n),
      .ov7670_clk   (ov7670_xclk),
      .ov7670_pwdn  (ov7670_pwdn)
   );
endmodule
//---- Top entity
module vc4dd08 (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 vc4dd08_v68c173 v68c173 (
  .v(w0)
 );
endmodule

/*-------------------------------------------------*/
/*-- Bit 0  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Assign 0 to the output wire
/*-------------------------------------------------*/

module vc4dd08_v68c173 (
 output v
);
 // Bit 0
 
 assign v = 1'b0;
endmodule
//---- Top entity
module v73da77 (
 input v262286,
 output v73ce71
);
 wire w0;
 wire w1;
 assign w0 = v262286;
 assign v73ce71 = w1;
 v73da77_vf38b30 vf38b30 (
  .clk_brd(w0),
  .clk50mhz(w1)
 );
endmodule

/*-------------------------------------------------*/
/*-- 12MHz to 50MHz  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- PLL converts the 12MHz clock to 50MHz
/*-------------------------------------------------*/

module v73da77_vf38b30 (
 input clk_brd,
 output clk50mhz
);
 
   // 50 MHz clock
    SB_PLL40_CORE
             #(.FEEDBACK_PATH("SIMPLE"),
                 .PLLOUT_SELECT("GENCLK"),
                 .DIVR(4'd5),
                 .DIVF(6'd49),
                 .DIVQ(3'd1),
                 .FILTER_RANGE(3'b001)
             )
             uut
             (
                 .REFERENCECLK(clk_brd),
                 .PLLOUTCORE(clk50mhz),
                 .RESETB(1'b1),
                 .BYPASS(1'b0)
              );
endmodule
//---- Top entity
module v78c6f8 (
 input [3:0] v15e3ad,
 output v1f80cc,
 output v6594ce,
 output v6945ea,
 output v52bdc9
);
 wire [0:3] w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 assign w0 = v15e3ad;
 assign v1f80cc = w1;
 assign v6594ce = w2;
 assign v6945ea = w3;
 assign v52bdc9 = w4;
 v78c6f8_v3f15a4 v3f15a4 (
  .in4bits(w0),
  .out_0(w1),
  .out_1(w2),
  .out_2(w3),
  .out_3(w4)
 );
endmodule

/*-------------------------------------------------*/
/*-- in4_split  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Split a 4 bits bus into 4 outputs
/*-------------------------------------------------*/

module v78c6f8_v3f15a4 (
 input [3:0] in4bits,
 output out_0,
 output out_1,
 output out_2,
 output out_3
);
 assign out_0 = in4bits[0];
 assign out_1 = in4bits[1];
 assign out_2 = in4bits[2];
 assign out_3 = in4bits[3];
endmodule
//---- Top entity
module v1bed30 (
 input vd517c0,
 input v67127b,
 input v1135a2,
 input v2e06dc,
 input v6ce758,
 input v217058,
 input vdaab10,
 input v306f98,
 output [7:0] v040cfe
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire [0:7] w8;
 assign w0 = vd517c0;
 assign w1 = v1135a2;
 assign w2 = v67127b;
 assign w3 = v2e06dc;
 assign w4 = v6ce758;
 assign w5 = v217058;
 assign w6 = vdaab10;
 assign w7 = v306f98;
 assign v040cfe = w8;
 v1bed30_ve44f8b ve44f8b (
  .in0(w0),
  .in2(w1),
  .in1(w2),
  .in3(w3),
  .in4(w4),
  .in5(w5),
  .in6(w6),
  .in7(w7),
  .dout(w8)
 );
endmodule

/*-------------------------------------------------*/
/*-- aggr8  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Joins 8 cables in a 8bit bus
/*-------------------------------------------------*/

module v1bed30_ve44f8b (
 input in0,
 input in1,
 input in2,
 input in3,
 input in4,
 input in5,
 input in6,
 input in7,
 output [7:0] dout
);
 assign dout[0] =in0;
 assign dout[1] =in1;
 assign dout[2] =in2;
 assign dout[3] =in3;
 assign dout[4] =in4;
 assign dout[5] =in5;
 assign dout[6] =in6;
 assign dout[7] =in7;
endmodule
//---- Top entity
module vf65fac (
 input v8d925d,
 input v025353,
 input [11:0] ve81328,
 input v675058,
 input v220422,
 input [2:0] vf5a7d7,
 input [7:0] ve3f8d2,
 output v06036e,
 output v4006d4,
 output [12:0] v27821c,
 output [3:0] v56f3c4,
 output [3:0] v6f66ae,
 output [3:0] vefb3e5
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire [0:9] w6;
 wire [0:9] w7;
 wire w8;
 wire w9;
 wire [0:11] w10;
 wire [0:12] w11;
 wire [0:3] w12;
 wire [0:3] w13;
 wire [0:3] w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire [0:2] w19;
 wire [0:7] w20;
 assign w0 = v8d925d;
 assign w1 = v8d925d;
 assign w8 = v025353;
 assign w9 = v025353;
 assign w10 = ve81328;
 assign v27821c = w11;
 assign v56f3c4 = w12;
 assign v6f66ae = w13;
 assign vefb3e5 = w14;
 assign v06036e = w15;
 assign v4006d4 = w16;
 assign w17 = v675058;
 assign w18 = v220422;
 assign w19 = vf5a7d7;
 assign w20 = ve3f8d2;
 assign w1 = w0;
 assign w9 = w8;
 assign w15 = w4;
 assign w16 = w5;
 v8635c8 v95fc84 (
  .vfdd2de(w0),
  .vd8985e(w2),
  .v603d30(w3),
  .vd5feb3(w4),
  .v485520(w5),
  .v4b793c(w6),
  .vc98ac8(w7),
  .vf39542(w9)
 );
 ve98f0e vf8f032 (
  .v94fa0b(w1),
  .v81949b(w2),
  .vc09fd8(w3),
  .v4c9124(w4),
  .v23fa0e(w5),
  .vb46d26(w6),
  .vc6c17f(w7),
  .v22cead(w8),
  .v797938(w10),
  .v226db0(w11),
  .vac7b6e(w12),
  .vc12384(w13),
  .v329586(w14),
  .v784c55(w17),
  .veb370a(w18),
  .v44b91f(w19),
  .v304877(w20)
 );
endmodule

/*-------------------------------------------------*/
/*-- top_vga_display_buffer  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Shows the content of a memory (buffer) on a VGA. Just 80x60. 100MHz clock, includes synch
/*-------------------------------------------------*/
//---- Top entity
module v8635c8 (
 input vfdd2de,
 input vf39542,
 output vd8985e,
 output v603d30,
 output vd5feb3,
 output v485520,
 output [9:0] v4b793c,
 output [9:0] vc98ac8
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire [0:9] w5;
 wire [0:9] w6;
 wire w7;
 assign w0 = vfdd2de;
 assign vd5feb3 = w1;
 assign vd8985e = w2;
 assign v603d30 = w3;
 assign v485520 = w4;
 assign v4b793c = w5;
 assign vc98ac8 = w6;
 assign w7 = vf39542;
 v8635c8_v1233d9 v1233d9 (
  .rst(w0),
  .vga_hsync(w1),
  .vga_visible(w2),
  .vga_new_pxl(w3),
  .vga_vsync(w4),
  .vga_col(w5),
  .vga_row(w6),
  .clk50mhz(w7)
 );
endmodule

/*-------------------------------------------------*/
/*-- vga_sync  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- VGA synch 640x480 input clock 100MHz
/*-------------------------------------------------*/

module v8635c8_v1233d9 (
 input rst,
 input clk50mhz,
 output vga_visible,
 output vga_new_pxl,
 output vga_hsync,
 output vga_vsync,
 output [9:0] vga_col,
 output [9:0] vga_row
);
    // @include vga_sync.v
    
    vga_sync link_vrlg
    (
      .rst     (rst),
      .clk     (clk50mhz),
      .visible (vga_visible),
      .new_pxl (vga_new_pxl),
      .hsync   (vga_hsync),
      .vsync   (vga_vsync),
      .col     (vga_col),
      .row     (vga_row)
   );
endmodule
//---- Top entity
module ve98f0e #(
 parameter vd1ec83 = 80,
 parameter v56bbae = 60
) (
 input v94fa0b,
 input v22cead,
 input v81949b,
 input vc09fd8,
 input v4c9124,
 input v23fa0e,
 input [9:0] vb46d26,
 input [9:0] vc6c17f,
 input [11:0] v797938,
 input v784c55,
 input veb370a,
 input [2:0] v44b91f,
 input [7:0] v304877,
 output [12:0] v226db0,
 output [3:0] vac7b6e,
 output [3:0] vc12384,
 output [3:0] v329586
);
 localparam p0 = vd1ec83;
 localparam p1 = v56bbae;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire [0:9] w7;
 wire [0:9] w8;
 wire [0:11] w9;
 wire [0:12] w10;
 wire [0:3] w11;
 wire [0:3] w12;
 wire [0:3] w13;
 wire w14;
 wire w15;
 wire [0:2] w16;
 wire w17;
 wire [0:7] w18;
 assign w2 = v94fa0b;
 assign w3 = v81949b;
 assign w4 = vc09fd8;
 assign w5 = v4c9124;
 assign w6 = v23fa0e;
 assign w7 = vb46d26;
 assign w8 = vc6c17f;
 assign w9 = v797938;
 assign v226db0 = w10;
 assign vac7b6e = w11;
 assign vc12384 = w12;
 assign v329586 = w13;
 assign w14 = v784c55;
 assign w15 = veb370a;
 assign w16 = v44b91f;
 assign w17 = v22cead;
 assign w18 = v304877;
 ve98f0e_v43e9e3 #(
  .c_img_cols(p0),
  .c_img_rows(p1)
 ) v43e9e3 (
  .rst(w2),
  .vga_visible(w3),
  .vga_new_pxl(w4),
  .vga_hsync(w5),
  .vga_vsync(w6),
  .vga_col(w7),
  .vga_row(w8),
  .frame_pixel(w9),
  .frame_addr(w10),
  .vga_red(w11),
  .vga_green(w12),
  .vga_blue(w13),
  .rgbmode(w14),
  .testmode(w15),
  .rgbfilter(w16),
  .clk50mhz(w17),
  .centroid(w18)
 );
endmodule

/*-------------------------------------------------*/
/*-- vga_display_buf  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- shows in a VGA the content of a memory (buffer). synch not included
/*-------------------------------------------------*/

module ve98f0e_v43e9e3 #(
 parameter c_img_cols = 0,
 parameter c_img_rows = 0
) (
 input rst,
 input clk50mhz,
 input vga_visible,
 input vga_new_pxl,
 input vga_hsync,
 input vga_vsync,
 input [9:0] vga_col,
 input [9:0] vga_row,
 input [11:0] frame_pixel,
 input rgbmode,
 input testmode,
 input [2:0] rgbfilter,
 input [7:0] centroid,
 output [12:0] frame_addr,
 output [3:0] vga_red,
 output [3:0] vga_green,
 output [3:0] vga_blue
);
   // @include vga_display.v
   
   vga_display link2vrlg 
   (
      .rst        (rst),
      .clk        (clk50mhz),
      .visible    (vga_visible),
      .new_pxl    (vga_new_pxl),
      .hsync      (vga_hsync),
      .vsync      (vga_vsync),
      .rgbmode    (rgbmode),
      .testmode   (testmode),
      .rgbfilter  (rgbfilter),
      .centroid   (centroid),
      .col        (vga_col),
      .row        (vga_row),
      .frame_pixel(frame_pixel),
      .frame_addr (frame_addr),
      .vga_red    (vga_red),
      .vga_green  (vga_green),
      .vga_blue   (vga_blue)
   );
endmodule
//---- Top entity
module vd7e6ff (
 input v248807,
 input vba979e,
 output v341fc3,
 output v790e82
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign w0 = v248807;
 assign w1 = vba979e;
 assign v790e82 = w2;
 assign v341fc3 = w3;
 vd7e6ff_v43ad2d v43ad2d (
  .oe(w0),
  .dout(w1),
  .din(w2),
  .pin(w3)
 );
endmodule

/*-------------------------------------------------*/
/*-- In-out-right  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Bloque inout, con conexión de pin por la derecha
/*-------------------------------------------------*/

module vd7e6ff_v43ad2d (
 input oe,
 input dout,
 output pin,
 output din
);
   SB_IO #(
       .PIN_TYPE(6'b1010_01),
       .PULLUP(1'b0)
   ) triState (
       .PACKAGE_PIN(pin),
       .OUTPUT_ENABLE(oe),
       .D_OUT_0(dout),
       .D_IN_0(din)
   );
endmodule
//---- Top entity
module v728cc4 (
 input vd6d39e,
 input vd8b32e,
 input v34bbf1,
 input [11:0] v693ffc,
 output vfb9b9d,
 output [12:0] v201920,
 output [11:0] v8cca3e,
 output [12:0] v0d6545,
 output [2:0] v83044f,
 output [7:0] ve0b809
);
 wire w0;
 wire w1;
 wire w2;
 wire [0:11] w3;
 wire w4;
 wire [0:11] w5;
 wire [0:12] w6;
 wire [0:12] w7;
 wire [0:7] w8;
 wire [0:2] w9;
 assign w0 = vd6d39e;
 assign w1 = vd8b32e;
 assign w2 = v34bbf1;
 assign w3 = v693ffc;
 assign vfb9b9d = w4;
 assign v8cca3e = w5;
 assign v201920 = w6;
 assign v0d6545 = w7;
 assign ve0b809 = w8;
 assign v83044f = w9;
 v728cc4_ve7c06b ve7c06b (
  .rst(w0),
  .clk(w1),
  .proc_ctrl(w2),
  .orig_img_pxl(w3),
  .proc_we(w4),
  .proc_img_pxl(w5),
  .proc_img_addr(w6),
  .orig_img_addr(w7),
  .centroid(w8),
  .rgbfilter(w9)
 );
endmodule

/*-------------------------------------------------*/
/*-- color_proc  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Applies different color filters to the original image and saves in another memory
/*-------------------------------------------------*/

module v728cc4_ve7c06b (
 input rst,
 input clk,
 input proc_ctrl,
 input [11:0] orig_img_pxl,
 input [12:0] orig_img_addr,
 output proc_we,
 output [12:0] proc_img_addr,
 output [11:0] proc_img_pxl,
 output [12:0] orig_img_addr,
 output [2:0] rgbfilter,
 output [7:0] centroid
);
 // @include color_proc.v
 
     color_proc lnk2vrlg
   (
      .rst        (rst),
      .clk        (clk),
      .proc_ctrl  (proc_ctrl), //input to select color filter
      // from original image frame buffer
      .orig_addr  (orig_img_addr),
      .orig_pxl   (orig_img_pxl),
      // to processed image frame buffer
      .proc_we        (proc_we),
      .proc_addr  (proc_img_addr),
      .proc_pxl   (proc_img_pxl),
      .centroid   (centroid),
      .rgbfilter  (rgbfilter)
   );
endmodule
//---- Top entity
module vc83dcd (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 vc83dcd_v68c173 v68c173 (
  .v(w0)
 );
endmodule

/*-------------------------------------------------*/
/*-- Bit 1  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- Assign 1 to the output wire
/*-------------------------------------------------*/

module vc83dcd_v68c173 (
 output v
);
 // Bit 1
 
 assign v = 1'b1;
endmodule
